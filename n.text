if (message.content == prefix + 'flip') {
		await message.delete()
		let result = (Math.random() >= 0.5) ? "Heads" : "Tails";
		message.reply(`Coin Flip Result: ${result}`)
	}

	if (message.content.slice(0, 9) == prefix + 'decode64') {
		await message.delete()
		let data;
		if (message.content.length == 9) {
			data = `Must provide a string`
		} else {
			data = message.content.slice(10, message.content.length)
			data = Buffer.from(data, 'base64').toString()
		}
		message.reply('Decoded data: ' + data)
	}

	if (message.content.slice(0, 9) == prefix + 'encode64') {
		await message.delete()
		let data;
		if (message.content.length == 9) {
			data = `Must provide a string`
		} else {
			data = message.content.slice(10, message.content.length)
			data = Buffer.from(data).toString('base64')
		}
		message.reply('Encoded data: ' + data)
	}

	if (message.content.slice(0, 5) == prefix + 'roll') {
		await message.delete()
		let max = 6;
		if (message.content.length > 6) {
			max = parseInt(message.content.slice(6, message.content.length));
		}
		let result = Math.floor(Math.random() * max) + 1;
		message.reply(`(${max}) Roll Result: ${result}`)
	}



	if (message.content.slice(0, 6) == prefix + '8ball') {
		await message.delete()
		let responses = ['It is certain.', 'It is decidedly so.', 'Without a doubt.', 'Yes â€“ definitely.', 'You may rely on it.', 'As I see it, yes.', 'Most likely.', 'Outlook good.', 'Yes.', 'Signs point to yes.', 'Reply hazy, try again.', 'ask again later.', 'Better not tell you now.', 'Cannot predict now.', 'Concentrate and ask again.', 'Don\'t count on it.', 'My reply is no.', 'My sources say no.', 'Outlook not so good.', 'Very doubtful.'];
		let result = Math.floor(Math.random() * 20);
		message.reply(`Question: ${message.content.slice(7, message.content.length)} | Response: ${responses[result]}`)
	}


    	if (message.content == prefix + 'host') {
		await message.delete()
		if (await message.author.id != "c6eee802-7275-4190-9f72-4b2f56fc574c") {
			await message.author.whisper(`Developer only command. Contact @admin for info.`)
		} else {
			let hostinfo = `OS: ${os.type()} ${os.release()} ${os.arch()} | CPU: (${os.cpus().length} Cores) ${os.cpus(0)[0].model} | Memory: ${Math.round(os.freemem() / 1024 / 1024 / 1024 * 10) / 10}GB free of ${Math.round(os.totalmem() / 1024 / 1024 / 1024 * 10) / 10}GB`;
			await message.author.whisper(hostinfo)
		}
	}

	if (message.content == prefix + 'uptime') {
		await message.delete()
		let a = new Date(new Date().valueOf() - process.uptime())
		b = a.getDate();

		var weekday = new Array(7);
		weekday[0] = "Sunday";
		weekday[1] = "Monday";
		weekday[2] = "Tuesday";
		weekday[3] = "Wednesday";
		weekday[4] = "Thursday";
		weekday[5] = "Friday";
		weekday[6] = "Saturday";
		var month = new Array();
		month[0] = "January";
		month[1] = "February";
		month[2] = "March";
		month[3] = "April";
		month[4] = "May";
		month[5] = "June";
		month[6] = "July";
		month[7] = "August";
		month[8] = "September";
		month[9] = "October";
		month[10] = "November";
		month[11] = "December";

		launch = weekday[a.getDay()] + ', ' + (b + (b > 0 ? ['th', 'st', 'nd', 'rd'][(b > 3 && b < 21) || b % 10 > 3 ? 0 : b % 10] : '')) + ' ' + month[a.getMonth()] + ', ' + a.getFullYear();

		let totalSeconds = process.uptime();
		let dys = Math.floor(totalSeconds / 86400);
		let hrs = Math.floor(totalSeconds / 3600) - (dys * 24);
		totalSeconds %= 3600;
		let min = Math.floor(totalSeconds / 60);
		let sec = Math.floor(totalSeconds % 60);

		uptime = '';
		uptime += (dys != 0) ? ' ' + dys + ' days' : '';
		uptime += (hrs != 0) ? ' ' + hrs + ' hrs' : '';
		uptime += (min != 0) ? ' ' + min + ' min' : '';
		uptime += (sec != 0) ? ' ' + sec + ' sec' : '';
		message.reply(`Launch Date: ${launch} | Uptime: ${uptime}`, { mentionUser: false })
	}
